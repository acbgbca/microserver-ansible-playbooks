---
# file: docker.yml
- hosts: docker
  gather_facts: yes
  remote_user: devops
  become: true
  
  tasks:
    - name: Add devops user to the sudoers
      copy:
          dest: "/etc/sudoers.d/devops"
          content: "devops  ALL=(ALL)  NOPASSWD: ALL"
    - name: Deploy SSH Key
      authorized_key: user=devops
                     key="{{ lookup('file', 'authorized_sshkey.pub') }}"
                     state=present
    - name: Disable Password Authentication
      lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PasswordAuthentication'
           line="PasswordAuthentication no"
           state=present
           backup=yes
    - name: Disable Root Login
      lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PermitRootLogin'
           line="PermitRootLogin no"
           state=present
           backup=yes
      notify:
        - restart ssh
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: install docker
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - git
    - name: Ensure Docker is started
      service:
        name: docker
        state: started
        enabled: yes
    - name: Install Loki Plugin
      community.docker.docker_plugin:
        plugin_name: grafana/loki-docker-driver:latest
        alias: loki
        state: present
    - name: Enable Loki Plugin
      community.docker.docker_plugin:
        plugin_name: grafana/loki-docker-driver:latest
        alias: loki
        state: enable
    - name: Docker ctr-network
      docker_network:
        driver: bridge
        name: ctr-network
    - name: Docker macvlan network
      docker_network:
        name: lan-network
        driver: "macvlan"
        driver_options:
          parent: eth0
        ipam_config:
          - subnet: "192.168.0.0/24"
            gateway: "192.168.0.1"
            iprange: "192.168.0.64/26"
    - name: NFS Video mount
      docker_volume:
        driver: "local"
        driver_options:
          type: nfs
          o: "addr=192.168.0.201,rw"
          device: :/nfs/videos
        volume_name: videos
    - name: NFS downloads mount
      docker_volume:
        driver: "local"
        driver_options:
          type: nfs
          o: "addr=192.168.0.201,rw"
          device: :/nfs/downloads
        volume_name: downloads
    - name: NFS pictures mount
      docker_volume:
        driver: "local"
        driver_options:
          type: nfs
          o: "addr=192.168.0.201,rw"
          device: :/nfs/pictures
        volume_name: pictures
    - name: NFS music mount
      docker_volume:
        driver: "local"
        driver_options:
          type: nfs
          o: "addr=192.168.0.201,rw"
          device: :/nfs/music
        volume_name: music
    - name: Add docker data group
      group:
        name: ctrdata
        state: present
        gid: 9001
    - name: Add docker data user
      user:
        name: ctrdata
        state: present
        uid: 9001
        group: ctrdata
        groups:
          - ctrdata
          - docker
    - name: Add devops to ctrdata
      user:
        name: devops
        state: present
        append: yes
        groups:
          - docker
          - ctrdata
    - name: Setup docker directories
      file:
        path: "{{item}}"
        state: directory
        mode: 0775
        owner: ctrdata
        group: ctrdata
      loop:
        - /ctr_cfg
        - /ctr_data
    - name: Checkout Docker configuration
      git:
        repo: git@github.com:acbgbca/microserver-docker.git
        dest: /ctr_cfg
        update: no
      register: gitupdate
    - name: Fix Git ownership
      file:
        path: /ctr_cfg
        state: directory
        mode: 0775
        owner: ctrdata
        group: ctrdata
        recursive: yes
      when: gitupdate.changed
    - name: Setup NFS backup directory
      file:
        path: "/mnt/backup"
        state: directory
    - name: Setup backup NFS mount
      lineinfile:
        path: /etc/fstab
        backup: yes
        search_string: '/mnt/backup'
        line: "192.168.0.201:/nfs/backup/docker        /mnt/backup     nfs     defaults        0 0"
        state: present
      register: backupnfs
    - name: Mount backup
      ansible.posix.mount:
        path: /mnt/backup
        state: remounted
      when: backupnfs.changed
    - name: Setup automatic updates
      import_tasks: shared_tasks/auto-updates.yml

  handlers:
    - name: restart ssh
      service:
        name=sshd
        state=restarted