---
# file: docker.yml
- hosts: docker
  become: true

  vars:
    default_user: "{{ ansible_user }}"
  
  pre_tasks:
    - name: Update apt-cache if needed
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Add docker data group
      group:
        name: "{{ data_user }}"
        state: present
        gid: "{{ data_id }}"
    - name: Add docker data user
      user:
        name: "{{ data_user }}"
        state: present
        uid: "{{ data_id }}"
        group: "{{ data_user }}"
        append: yes
        groups:
          - "{{ data_user }}"
    
  roles:
    - base_server
    - docker
    - ansible_server
  
  tasks:
    - name: Docker macvlan network
      docker_network:
        name: lan-network
        driver: "macvlan"
        driver_options:
          parent: eth0
        ipam_config:
          - subnet: "192.168.0.0/24"
            gateway: "192.168.0.1"
            iprange: "192.168.0.64/26"
    - name: Install git
      apt:
        name:
          - git
          - acl
        state: present
    - name: Add devops to "{{ data_user }}"
      user:
        name: devops
        state: present
        append: yes
        groups:
          - "{{ data_user }}"
    - name: Setup docker directories
      file:
        path: "{{item}}"
        state: directory
        mode: 0775
        owner: "{{ data_user }}"
        group: "{{ data_user }}"
      loop:
        - /ctr_cfg
        - /ctr_data
    - name: Checkout Docker configuration
      git:
        repo: git@github.com:acbgbca/microserver-docker.git
        dest: /ctr_cfg
        update: no
        accept_hostkey: yes
      become: no
      register: gitupdate
    - name: Fix Git ownership
      file:
        path: /ctr_cfg
        state: directory
        mode: 0775
        owner: "{{ data_user }}"
        group: "{{ data_user }}"
        recursive: yes
      when: gitupdate.changed
    - name: Setup NFS mounts
      include_tasks:
        file: includes/nfs_mounts.yml
        apply:
          tags: nfs
      with_items: "{{ nfs_mounts }}"
      tags: nfs
    - name: Setup weekly backup task
      template:
        src: templates/docker-backup-upgrade
        dest: /etc/cron.weekly/docker-backup-upgrade
        owner: root
        group: root
        mode: '0755'
      tags:
      - backup
# The version of ansible on the server won't currently work with this
    # - name: Checkout Ansible playbooks
    #   git:
    #     repo: git@github.com:acbgbca/microserver-ansible-playbooks.git
    #     dest: "/home/{{ ansible_user }}/ansible"
    #     update: no
    #     accept_hostkey: yes
    #   become: no
    # - name: Install password file
    #   copy:
    #     src: vault_password.txt
    #     dest: "/home/{{ ansible_user }}/password.txt"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     mode: "0600"
    # - name: Install hosts file
    #   copy:
    #     src: docker_localhosts
    #     dest: "/home/{{ ansible_user }}/hosts"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     mode: "0600"
    # - name: Install hosts file
    #   copy:
    #     src: requirements.yml
    #     dest: "/home/{{ ansible_user }}/ansible/requirements.yml"
    #     owner: "{{ ansible_user }}"
    #     group: "{{ ansible_user }}"
    #     mode: "0600"
    # - name: Install Community Collections
    #   shell: "ansible-galaxy collection install community.general"
    # - name: Install weekly update job
    #   cron: 
    #     name: Docker backup and upgrade
    #     minute: 0
    #     hour: 3
    #     weekday: 6
    #     job: "ansible-playbook -i /home/{{ ansible_user }}/hosts /home/{{ ansible_user }}/ansible/docker-backup.yml --vault-password-file /home/{{ ansible_user }}/password.txt"
    #     cron_file: docker-backup-upgrade
    #     user: "{{ ansible_user }}"